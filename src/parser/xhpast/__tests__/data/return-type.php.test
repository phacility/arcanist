<?php

function a(): string {}

function b(): array {}

function c(): callable {}

function d(): ?string {}

function e(): void {}

// TODO: This shouldn't technically be allowed as it will cause a fatal error.
function f(): ?void {}

class a {
  function b(): string {}
  function c(): array {}
  function d(): callable {}
}

$funcs = [
  function (): string {},
  function (): array {},
  function (): callable {},
  function (): ?string {},
  function (): void {},

  static function (): string {},
  static function (): array {},
  static function (): callable {},
  static function (): ?string {},
  static function (): void {},
];

~~~~~~~~~~
pass
~~~~~~~~~~
* n_PROGRAM
 * n_STATEMENT_LIST
  * n_OPEN_TAG
   > <?php
  > "\n\n"
  * n_STATEMENT
   * n_FUNCTION_DECLARATION
    * n_EMPTY
    * n_EMPTY
    * n_STRING
     > a
    * n_DECLARATION_PARAMETER_LIST
     > (
     > )
    * n_EMPTY
    * n_DECLARATION_RETURN
     * n_CLASS_NAME
      > string
    > " "
    * n_STATEMENT_LIST
     > {
     > }
  > "\n\n"
  * n_STATEMENT
   * n_FUNCTION_DECLARATION
    * n_EMPTY
    * n_EMPTY
    * n_STRING
     > b
    * n_DECLARATION_PARAMETER_LIST
     > (
     > )
    * n_EMPTY
    * n_DECLARATION_RETURN
     * n_TYPE_NAME
      > array
    > " "
    * n_STATEMENT_LIST
     > {
     > }
  > "\n\n"
  * n_STATEMENT
   * n_FUNCTION_DECLARATION
    * n_EMPTY
    * n_EMPTY
    * n_STRING
     > c
    * n_DECLARATION_PARAMETER_LIST
     > (
     > )
    * n_EMPTY
    * n_DECLARATION_RETURN
     * n_TYPE_NAME
      > callable
    > " "
    * n_STATEMENT_LIST
     > {
     > }
  > "\n\n"
  * n_STATEMENT
   * n_FUNCTION_DECLARATION
    * n_EMPTY
    * n_EMPTY
    * n_STRING
     > d
    * n_DECLARATION_PARAMETER_LIST
     > (
     > )
    * n_EMPTY
    * n_DECLARATION_RETURN
     * n_NULLABLE_TYPE
      * n_CLASS_NAME
       > string
    > " "
    * n_STATEMENT_LIST
     > {
     > }
  > "\n\n"
  * n_STATEMENT
   * n_FUNCTION_DECLARATION
    * n_EMPTY
    * n_EMPTY
    * n_STRING
     > e
    * n_DECLARATION_PARAMETER_LIST
     > (
     > )
    * n_EMPTY
    * n_DECLARATION_RETURN
     * n_CLASS_NAME
      > void
    > " "
    * n_STATEMENT_LIST
     > {
     > }
  > "\n\n"
  > "// TODO: This shouldn't technically be allowed as it will cause a fatal er"
  . "ror.\n"
  * n_STATEMENT
   * n_FUNCTION_DECLARATION
    * n_EMPTY
    * n_EMPTY
    * n_STRING
     > f
    * n_DECLARATION_PARAMETER_LIST
     > (
     > )
    * n_EMPTY
    * n_DECLARATION_RETURN
     * n_NULLABLE_TYPE
      * n_CLASS_NAME
       > void
    > " "
    * n_STATEMENT_LIST
     > {
     > }
  > "\n\n"
  * n_STATEMENT
   * n_CLASS_DECLARATION
    * n_CLASS_ATTRIBUTES
     > class
    > " "
    * n_CLASS_NAME
     > a
    * n_EMPTY
    * n_EMPTY
    * n_STATEMENT_LIST
     > {
     > "\n  "
     * n_STATEMENT
      * n_METHOD_DECLARATION
       * n_METHOD_MODIFIER_LIST
       * n_EMPTY
       * n_STRING
        > b
       * n_DECLARATION_PARAMETER_LIST
        > (
        > )
       * n_EMPTY
       * n_DECLARATION_RETURN
        * n_CLASS_NAME
         > string
       > " "
       * n_STATEMENT_LIST
        > {
        > }
     > "\n  "
     * n_STATEMENT
      * n_METHOD_DECLARATION
       * n_METHOD_MODIFIER_LIST
       * n_EMPTY
       * n_STRING
        > c
       * n_DECLARATION_PARAMETER_LIST
        > (
        > )
       * n_EMPTY
       * n_DECLARATION_RETURN
        * n_TYPE_NAME
         > array
       > " "
       * n_STATEMENT_LIST
        > {
        > }
     > "\n  "
     * n_STATEMENT
      * n_METHOD_DECLARATION
       * n_METHOD_MODIFIER_LIST
       * n_EMPTY
       * n_STRING
        > d
       * n_DECLARATION_PARAMETER_LIST
        > (
        > )
       * n_EMPTY
       * n_DECLARATION_RETURN
        * n_TYPE_NAME
         > callable
       > " "
       * n_STATEMENT_LIST
        > {
        > }
     > "\n"
     > }
  > "\n\n"
  * n_STATEMENT
   * n_BINARY_EXPRESSION
    * n_VARIABLE
     > $funcs
    > " "
    * n_OPERATOR
     > =
    > " "
    * n_ARRAY_LITERAL
     * n_ARRAY_VALUE_LIST
      > [
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_CLASS_NAME
          > string
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_TYPE_NAME
          > array
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_TYPE_NAME
          > callable
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_NULLABLE_TYPE
          * n_CLASS_NAME
           > string
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_CLASS_NAME
          > void
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_STRING
         > static
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_CLASS_NAME
          > string
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_STRING
         > static
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_TYPE_NAME
          > array
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_STRING
         > static
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_TYPE_NAME
          > callable
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_STRING
         > static
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_NULLABLE_TYPE
          * n_CLASS_NAME
           > string
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n  "
      * n_ARRAY_VALUE
       * n_EMPTY
       * n_FUNCTION_DECLARATION
        * n_STRING
         > static
        * n_EMPTY
        * n_EMPTY
        * n_EMPTY
        * n_DECLARATION_PARAMETER_LIST
         > (
         > )
        * n_EMPTY
        * n_DECLARATION_RETURN
         * n_CLASS_NAME
          > void
        > " "
        * n_STATEMENT_LIST
         > {
         > }
      > ,
      > "\n"
      > ]
   > ;
 > "\n\n"
